using System;
using System.Collections.Generic;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using static EdjCase.Cryptography.BLS.Interop;

namespace EdjCase.Cryptography.BLS
{
	internal class Test
	{
		public static void Main()
		{
			var publicKey = new byte[]
			{
				//0x81, 0x4C, 0x0E, 0x6E, 0xC7, 0x1F, 0xAB, 0x58, 0x3B, 0x08, 0xBD, 0x81, 0x37, 0x3C, 0x25, 0x5C, 0x3C, 0x37, 0x1B, 0x2E, 0x84, 0x86, 0x3C, 0x98, 0xA4, 0xF1, 0xE0, 0x8B, 0x74, 0x23, 0x5D, 0x14, 0xFB, 0x5D, 0x9C, 0x0C, 0xD5, 0x46, 0xD9, 0x68, 0x5F, 0x91, 0x3A, 0x0C, 0x0B, 0x2C, 0xC5, 0x34, 0x15, 0x83, 0xBF, 0x4B, 0x43, 0x92, 0xE4, 0x67, 0xDB, 0x96, 0xD6, 0x5B, 0x9B, 0xB4, 0xCB, 0x71, 0x71, 0x12, 0xF8, 0x47, 0x2E, 0x0D, 0x5A, 0x4D, 0x14, 0x50, 0x5F, 0xFD, 0x74, 0x84, 0xB0, 0x12, 0x91, 0x09, 0x1C, 0x5F, 0x87, 0xB9, 0x88, 0x83, 0x46, 0x3F, 0x98, 0x09, 0x1A, 0x0B, 0xAA, 0xAE
				0xa7, 0x62, 0x3a, 0x93, 0xcd, 0xb5, 0x6c, 0x4d, 0x23, 0xd9, 0x9c, 0x14, 0x21, 0x6a, 0xfa, 0xab, 0x3d, 0xfd, 0x6d, 0x4f, 0x9e, 0xb3, 0xdb, 0x23, 0xd0, 0x38, 0x28, 0x0b, 0x6d, 0x5c, 0xb2, 0xca, 0xae, 0xe2, 0xa1, 0x9d, 0xd9, 0x2c, 0x9d, 0xf7, 0x00, 0x1d, 0xed, 0xe2, 0x3b, 0xf0, 0x36, 0xbc, 0x0f, 0x33, 0x98, 0x2d, 0xfb, 0x41, 0xe8, 0xfa, 0x9b, 0x8e, 0x96, 0xb5, 0xdc, 0x3e, 0x83, 0xd5, 0x5c, 0xa4, 0xdd, 0x14, 0x6c, 0x7e, 0xb2, 0xe8, 0xb6, 0x85, 0x9c, 0xb5, 0xa5, 0xdb, 0x81, 0x5d, 0xb8, 0x68, 0x10, 0xb8, 0xd1, 0x2c, 0xee, 0x15, 0x88, 0xb5, 0xdb, 0xf3, 0x4a, 0x4d, 0xc9, 0xa5
			};
			var message = new byte[]
			{
				//0x0D, 0x69, 0xC4, 0xEE, 0x75, 0x34, 0x4C, 0x70, 0x17, 0x8C, 0xB3, 0xF5, 0x88, 0x52, 0x9E, 0x94, 0xD6, 0x46, 0x85, 0x23, 0xB7, 0x7C, 0xDF, 0xA8, 0x29, 0x6F, 0xE1, 0x4F, 0x9E, 0x8F, 0xD8, 0x62, 0x24, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
				0x68, 0x65, 0x6c, 0x6c, 0x6f
			};
			var signature = new byte[]
			{
				//0xAE, 0x65, 0xCE, 0x93, 0x69, 0xD2, 0xC2, 0xD2, 0x7B, 0xCD, 0xBB, 0x31, 0x03, 0x02, 0x50, 0xC0, 0xC4, 0x94, 0xD6, 0x19, 0x07, 0xE0, 0xB6, 0xB9, 0x57, 0xA7, 0x2E, 0x46, 0x80, 0x2F, 0xAE, 0x33, 0xD6, 0xD2, 0xA6, 0xCA, 0x55, 0xC7, 0x42, 0x8D, 0x83, 0xF5, 0x81, 0xB4, 0xD9, 0x0F, 0xDF, 0x6F
				0xb8, 0x9e, 0x13, 0xa2, 0x12, 0xc8, 0x30, 0x58, 0x6e, 0xaa, 0x9a, 0xd5, 0x39, 0x46, 0xcd, 0x96, 0x87, 0x18, 0xeb, 0xec, 0xc2, 0x7e, 0xda, 0x84, 0x9d, 0x92, 0x32, 0x67, 0x3d, 0xcd, 0x4f, 0x44, 0x0e, 0x8b, 0x5d, 0xf3, 0x9b, 0xf1, 0x4a, 0x88, 0x04, 0x8c, 0x15, 0xe1, 0x6c, 0xbc, 0xaa, 0xbe
			};
			try
			{
				bool isValid2 = BlsUtil.VerifyHash(publicKey, message, signature);
				Console.WriteLine("2: " + isValid2);

			}
			catch (Exception ex)
			{
				Console.WriteLine("2: " + ex);
			}
		}
	}
}
